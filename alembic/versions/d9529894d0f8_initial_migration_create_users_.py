"""Initial migration: create users, scenarios, runs, and ledger_rows tables

Revision ID: d9529894d0f8
Revises: 
Create Date: 2025-09-09 19:05:30.489644

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd9529894d0f8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scenario_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scenarios_name', 'scenarios', ['name'], unique=False)
    op.create_index('idx_scenarios_user_created', 'scenarios', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_scenarios_id'), 'scenarios', ['id'], unique=False)
    op.create_index(op.f('ix_scenarios_user_id'), 'scenarios', ['user_id'], unique=False)
    op.create_table('runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('run_type', sa.String(length=50), nullable=False),
    sa.Column('num_simulations', sa.Integer(), nullable=True),
    sa.Column('results', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("run_type IN ('monte_carlo', 'deterministic', 'historical')", name='ck_run_type'),
    sa.CheckConstraint("status IN ('pending', 'running', 'completed', 'failed')", name='ck_run_status'),
    sa.CheckConstraint('num_simulations > 0', name='ck_num_simulations_positive'),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_runs_created', 'runs', ['created_at'], unique=False)
    op.create_index('idx_runs_scenario_status', 'runs', ['scenario_id', 'status'], unique=False)
    op.create_index(op.f('ix_runs_id'), 'runs', ['id'], unique=False)
    op.create_index(op.f('ix_runs_scenario_id'), 'runs', ['scenario_id'], unique=False)
    op.create_index(op.f('ix_runs_status'), 'runs', ['status'], unique=False)
    op.create_table('ledger_rows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('account_name', sa.String(length=255), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.CheckConstraint("account_type IN ('taxable', 'traditional_401k', 'roth_401k', 'traditional_ira', 'roth_ira', 'hsa', 'college_529', 'cash')", name='ck_account_type'),
    sa.CheckConstraint("transaction_type IN ('contribution', 'withdrawal', 'growth', 'dividend', 'interest', 'fee', 'rebalance', 'transfer')", name='ck_transaction_type'),
    sa.CheckConstraint('month >= 1 AND month <= 12', name='ck_month_range'),
    sa.CheckConstraint('year >= 1900 AND year <= 2100', name='ck_year_range'),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ledger_account_type', 'ledger_rows', ['account_type'], unique=False)
    op.create_index('idx_ledger_run_year', 'ledger_rows', ['run_id', 'year'], unique=False)
    op.create_index('idx_ledger_transaction_type', 'ledger_rows', ['transaction_type'], unique=False)
    op.create_index('idx_ledger_year_month', 'ledger_rows', ['year', 'month'], unique=False)
    op.create_index(op.f('ix_ledger_rows_account_type'), 'ledger_rows', ['account_type'], unique=False)
    op.create_index(op.f('ix_ledger_rows_id'), 'ledger_rows', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_rows_run_id'), 'ledger_rows', ['run_id'], unique=False)
    op.create_index(op.f('ix_ledger_rows_transaction_type'), 'ledger_rows', ['transaction_type'], unique=False)
    op.create_index(op.f('ix_ledger_rows_year'), 'ledger_rows', ['year'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('health_check',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'ok'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='health_check_pkey')
    )
    op.drop_index(op.f('ix_ledger_rows_year'), table_name='ledger_rows')
    op.drop_index(op.f('ix_ledger_rows_transaction_type'), table_name='ledger_rows')
    op.drop_index(op.f('ix_ledger_rows_run_id'), table_name='ledger_rows')
    op.drop_index(op.f('ix_ledger_rows_id'), table_name='ledger_rows')
    op.drop_index(op.f('ix_ledger_rows_account_type'), table_name='ledger_rows')
    op.drop_index('idx_ledger_year_month', table_name='ledger_rows')
    op.drop_index('idx_ledger_transaction_type', table_name='ledger_rows')
    op.drop_index('idx_ledger_run_year', table_name='ledger_rows')
    op.drop_index('idx_ledger_account_type', table_name='ledger_rows')
    op.drop_table('ledger_rows')
    op.drop_index(op.f('ix_runs_status'), table_name='runs')
    op.drop_index(op.f('ix_runs_scenario_id'), table_name='runs')
    op.drop_index(op.f('ix_runs_id'), table_name='runs')
    op.drop_index('idx_runs_scenario_status', table_name='runs')
    op.drop_index('idx_runs_created', table_name='runs')
    op.drop_table('runs')
    op.drop_index(op.f('ix_scenarios_user_id'), table_name='scenarios')
    op.drop_index(op.f('ix_scenarios_id'), table_name='scenarios')
    op.drop_index('idx_scenarios_user_created', table_name='scenarios')
    op.drop_index('idx_scenarios_name', table_name='scenarios')
    op.drop_table('scenarios')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
