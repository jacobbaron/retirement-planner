"""Simplify scenario versioning to use full copies

Revision ID: 4d9e0e1b8acb
Revises: 0ba3dffefb22
Create Date: 2025-09-09 20:01:33.881409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4d9e0e1b8acb'
down_revision: Union[str, None] = '0ba3dffefb22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, update versioned_scenarios table to remove foreign key dependencies
    op.add_column('versioned_scenarios', sa.Column('scenario_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('versioned_scenarios', sa.Column('parent_version_id', sa.Integer(), nullable=True))
    
    # Drop foreign key constraints first
    op.drop_constraint('versioned_scenarios_patch_id_fkey', 'versioned_scenarios', type_='foreignkey')
    op.drop_constraint('versioned_scenarios_base_scenario_id_fkey', 'versioned_scenarios', type_='foreignkey')
    
    # Drop old columns
    op.drop_column('versioned_scenarios', 'patch_id')
    op.drop_column('versioned_scenarios', 'base_scenario_id')
    
    # Create new foreign key constraint
    op.create_foreign_key(None, 'versioned_scenarios', 'versioned_scenarios', ['parent_version_id'], ['id'], ondelete='SET NULL')
    
    # Create new indexes
    op.create_index('idx_versioned_scenarios_parent_version', 'versioned_scenarios', ['parent_version_id'], unique=False)
    op.create_index(op.f('ix_versioned_scenarios_parent_version_id'), 'versioned_scenarios', ['parent_version_id'], unique=False)
    
    # Now we can safely drop the dependent tables
    op.drop_table('scenario_patches')
    op.drop_table('base_scenarios')
    
    # Make scenario_data NOT NULL after adding it
    op.alter_column('versioned_scenarios', 'scenario_data', nullable=False)
    
    # Update runs table
    op.alter_column('runs', 'versioned_scenario_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('versioned_scenarios', sa.Column('base_scenario_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('versioned_scenarios', sa.Column('patch_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'versioned_scenarios', type_='foreignkey')
    op.create_foreign_key('versioned_scenarios_base_scenario_id_fkey', 'versioned_scenarios', 'base_scenarios', ['base_scenario_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('versioned_scenarios_patch_id_fkey', 'versioned_scenarios', 'scenario_patches', ['patch_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_versioned_scenarios_parent_version_id'), table_name='versioned_scenarios')
    op.drop_index('idx_versioned_scenarios_parent_version', table_name='versioned_scenarios')
    op.create_index('ix_versioned_scenarios_patch_id', 'versioned_scenarios', ['patch_id'], unique=False)
    op.create_index('ix_versioned_scenarios_base_scenario_id', 'versioned_scenarios', ['base_scenario_id'], unique=False)
    op.create_index('idx_versioned_scenarios_base_patch', 'versioned_scenarios', ['base_scenario_id', 'patch_id'], unique=False)
    op.drop_column('versioned_scenarios', 'parent_version_id')
    op.drop_column('versioned_scenarios', 'scenario_data')
    op.alter_column('runs', 'versioned_scenario_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('scenario_patches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patch_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('base_scenario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('changes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('removed_fields', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['base_scenario_id'], ['base_scenarios.id'], name='scenario_patches_base_scenario_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='scenario_patches_pkey')
    )
    op.create_index('ix_scenario_patches_patch_id', 'scenario_patches', ['patch_id'], unique=True)
    op.create_index('ix_scenario_patches_id', 'scenario_patches', ['id'], unique=False)
    op.create_index('ix_scenario_patches_base_scenario_id', 'scenario_patches', ['base_scenario_id'], unique=False)
    op.create_index('idx_patches_patch_id', 'scenario_patches', ['patch_id'], unique=False)
    op.create_index('idx_patches_created', 'scenario_patches', ['created_at'], unique=False)
    op.create_index('idx_patches_base_version', 'scenario_patches', ['base_scenario_id', 'version'], unique=False)
    op.create_table('base_scenarios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('base_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('scenario_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='base_scenarios_pkey')
    )
    op.create_index('ix_base_scenarios_id', 'base_scenarios', ['id'], unique=False)
    op.create_index('ix_base_scenarios_base_id', 'base_scenarios', ['base_id'], unique=True)
    op.create_index('idx_base_scenarios_name', 'base_scenarios', ['name'], unique=False)
    op.create_index('idx_base_scenarios_created', 'base_scenarios', ['created_at'], unique=False)
    op.create_index('idx_base_scenarios_base_id', 'base_scenarios', ['base_id'], unique=False)
    # ### end Alembic commands ###
